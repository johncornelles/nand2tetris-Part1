// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=da, b=db, c=dc, d=dd, e=de, f=df, g=dg, h=dh);
    
    RAM64(in=in, load=da, address=address[3..8], out=ma);
    RAM64(in=in, load=db, address=address[3..8], out=mb);
    RAM64(in=in, load=dc, address=address[3..8], out=mc);
    RAM64(in=in, load=dd, address=address[3..8], out=md);
    RAM64(in=in, load=de, address=address[3..8], out=me);
    RAM64(in=in, load=df, address=address[3..8], out=mf);
    RAM64(in=in, load=dg, address=address[3..8], out=mg);
    RAM64(in=in, load=dh, address=address[3..8], out=mh);

    Mux8Way16(a=ma, b=mb, c=mc, d=md, e=me, f=mf, g=mg, h=mh, sel=address[0..2], out=out);
    
}